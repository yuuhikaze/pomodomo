import { Button } from "std-widgets.slint";

export component AppWindow inherits Window {
    in property <string> timer: "25:00";
    in property <int> remaining-time: 25 * 60;
    property <int> completed-cycles;
    in property <int> cycle: mod(completed-cycles, 8);
    out property <bool> paused: true;
    property <int> counter;
    out property <int> elapsed-time: mod(cycle, 2) == 0 ? 25 * 60 - remaining-time : 5 * 60 - remaining-time;
    in property <string> status: "Focus";
    default-font-family: "Edu NSW ACT Foundation";
    max-width: 0px;
    max-height: 0px;
    forward-focus: play-pause;
    callback upgrade();
    public function complete-cycle() {
        completed-cycles += 1;
        counter += 1;
    }

    HorizontalLayout {
        padding: 10px;
        VerticalLayout {
            alignment: center;
            width: 100px;
            HorizontalLayout {
                alignment: center;
                Text {
                    text: status;
                }
            }

            HorizontalLayout {
                alignment: center;
                Text {
                    text: "\{ceil((cycle + 1) / 2)}/4";
                }
            }
        }

        VerticalLayout {
            horizontal-stretch: 1;
            alignment: center;
            HorizontalLayout {
                alignment: center;
                Text {
                    font-size: 32px;
                    text: timer;
                }
            }

            Rectangle {
                height: 5px;
            }

            HorizontalLayout {
                alignment: center;
                play-pause := Button {
                    text: root.paused ? "" : "";
                    clicked => {
                        root.paused = !root.paused;
                    }
                }

                upgrade := Button {
                    enabled: root.counter >= 7 ? true : false;
                    text: "󰁡";
                    clicked => {
                        if status == "Short Break" {
                            root.upgrade();
                            counter = 0;
                        } else {
                            debug("Upgrade is only available during short breaks");
                        }
                    }
                }
            }

            HorizontalLayout {
                alignment: center;
                done := Button {
                    text: "󰄴";
                }

                stats := Button {
                    text: "󰄨";
                }
            }
        }
    }
}
